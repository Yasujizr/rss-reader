// Copyright 2016 Josh Froelich. All rights reserved.
// Use of this source code is governed by a MIT-style license
// that can be found in the LICENSE file

'use strict';

// @param connection {IDBDatabase} an open database connection
// @param feed {Feed} the feed to add
// @param callback {Function} optional callback passed the stored object and
// its post stored auto-incremented id
// TODO: callback with the sanitized feed, not the serialized feed, and define
// the id in sanitized before hand
function addFeed(connection, feed, callback) {
  console.debug('Adding feed', feed);
  console.assert(!feed.id, 'feed.id is defined', feed.id);
  let sanitizedFeed = feed.sanitize();
  sanitizedFeed.dateCreated = new Date();
  let serializedFeed = sanitizedFeed.serialize();

  const transaction = connection.transaction('feed', 'readwrite');
  const store = transaction.objectStore('feed');
  const request = store.add(serializedFeed);
  if(callback) {
    request.onsuccess = addOnSuccess;
    request.onerror = addOnError;
  }

  function addOnSuccess(event) {
    // Set the id generated by indexedDB
    serializedFeed.id = event.target.result;
    callback({'type': 'success', 'feed': serializedFeed});
  }

  function addOnError(event) {
    console.error(event);
    callback({'type': event.target.error.name});
  }
}
