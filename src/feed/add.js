// Copyright 2014 Josh Froelich. All rights reserved.
// Use of this source code is governed by a MIT-style license
// that can be found in the LICENSE file

'use strict';

var lucu = lucu || {};
lucu.feed = lucu.feed || {};

/**
 * TODO: lucu.feed.add no longer sends message when complete so the caller
 * needs to do this.
 * chrome.runtime.sendMessage({type:'subscribe',feed:feed});
 */
lucu.feed.add = function(db, feed, oncomplete, onerror) {

  // console.debug('lucu.feed.add url %s', feed.url);

  var cleanedFeed = lucu.feed.sanitize(feed);

  var storableFeed = {};
  storableFeed.url = feed.url;
  storableFeed.schemeless = lucu.uri.filterScheme(storableFeed.url);

  // NOTE: title must be somehow defined or else it wont be returned
  // when sorting by title in forAllFeeds in the options page. This is
  // kind of ugly and should eventually be improved.

  if(cleanedFeed.title) {
    storableFeed.title = cleanedFeed.title;
  } else {
    storableFeed.title = '';
  }

  if(cleanedFeed.description) {
    storableFeed.description = cleanedFeed.description;
  }

  if(cleanedFeed.link) {
    storableFeed.link =  cleanedFeed.link;
  }

  if(cleanedFeed.date) {
    storableFeed.date = cleanedFeed.date;
  }

  // The fetched date might not be set when importing feeds from
  // an OPML file or when subscribing to a feed while offline
  if(feed.fetched) {
    storableFeed.fetched = feed.fetched;
  }

  storableFeed.created = Date.now();

  // This is expected to trigger onerror when adding a feed
  // where schemeless is not unique because of the unique flag
  // on feedStore.schemelessIndex. This does not mean a coding
  // error occurred.

  var addFeedTransaction = db.transaction('feed','readwrite');
  var feedStore = addFeedTransaction.objectStore('feed');
  var addFeedRequest = feedStore.add(storableFeed);
  addFeedRequest.onerror = onerror;

  // NOTE: I am leaving this commented code here
  // until the new onAddSuccess function is later tested
  //addFeedRequest.onsuccess = function() {
  //  storableFeed.id = this.result;
  //  lucu.entry.mergeAll(db, storableFeed, feed.entries, oncomplete);
  //};

  addFeedRequest.onsuccess = lucu.feed.onAddSuccess.bind(addFeedRequest,
    db, storableFeed, feed.entries, oncomplete);
};

lucu.feed.onAddSuccess = function(db, storableFeed, entries, onComplete, addEvent) {
  // NOTE: expects this instanceof IDBRequest
  // NOTE: expressly providing addEvent in the function parameters just as a
  // helpful reminder that this will be called as a partial that does not set
  // addEvent, which is set by indexedDB when calling this function in its bounded
  // form.

  // Because we are using an auto-incremented id that is generated by indexedDB,
  // this is how we set the id of the in mem object after insert
  storableFeed.id = this.result;

  // Handoff to mergeAll to insert the entries for the feed, if there are any.
  // mergeAll has its own logic of dealing with no entries and will later handoff
  // to onComplete
  lucu.entry.mergeAll(db, storableFeed, entries, onComplete);
};
