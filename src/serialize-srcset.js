// Copyright 2016 Josh Froelich. All rights reserved.
// Use of this source code is governed by a MIT-style license
// that can be found in the LICENSE file

'use strict';

// Serializes a descriptors array such as one generated by parseSrcset
function serializeSrcset(descriptorsArray) {
  const outputStringBuffer = [];

  for(let i = 0, len = descriptorsArray.length; i < len; i++) {
    let descriptor = descriptorsArray[i];

    let descriptorStringBuffer = [];
    descriptorStringBuffer.push(descriptor.url);

    // d is density
    if(descriptor.d) {
      descriptorStringBuffer.push(' ');
      descriptorStringBuffer.push(descriptor.d);
      descriptorStringBuffer.push('x');
    }

    // w is width
    if(descriptor.w) {
      descriptorStringBuffer.push(' ');
      descriptorStringBuffer.push(descriptor.w);
      descriptorStringBuffer.push('w');
    }

    // h is future-compat-h
    if(descriptor.h) {
      descriptorStringBuffer.push(' ');
      descriptorStringBuffer.push(descriptor.h);
      descriptorStringBuffer.push('h');
    }

    outputStringBuffer.push(descriptorStringBuffer.join(''));
  }

  // The space is important
  return outputStringBuffer.join(', ');
}
